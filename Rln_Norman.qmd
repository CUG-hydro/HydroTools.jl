# 1. Compare longwave radiative transfer calculated using the analytical canopy-integrated model and the Norman multilayer model


```{julia}
using QuadGK
using Printf

# @printf = @printf
```

```{julia}
# Supplemental program 14.4
sigma = 5.67e-08;             # Stefan-Boltzmann constant (W/m2/K4)
K0 = 273.15;                # Freezing point of water (K)
ϵ = 0.98;                # Leaf emissivity
emgrnd = 1.00;                # Ground (soil) emissivity
# emgrnd = 0.96;                # Ground (soil) emissivity

LAI = 4.9;                    # Leaf area index (m2/m2)
tveg = K0 + 25;             # Canopy temperature (K)
tgrnd = K0 + 20;            # Ground temperature (K)
irsky = 400;                  # Atmospheric longwave radiation (W/m2)

# --- For Norman radiation
nveg = 49;                    # Number of leaf layers (each with lai = dlai)
nsoi = 1;                     # First canopy layer is soil
nbot = nsoi + 1;              # Index for bottom leaf layer
ntop = nbot + nveg - 1;       # Index for top leaf layer

tleaf = zeros(ntop)
dlai = zeros(ntop)
td = zeros(ntop)

for iv = nbot:ntop
   tleaf[iv] = tveg;          # Leaf temperature (K)
   dlai[iv] = 0.1;            # Layer leaf area index (m2/m2)
   td[iv] = 0.915;            # Exponential transmittance of diffuse radiation through a single leaf layer
end

```

# Longwave radiation transfer through canopy (analytical method)

```{julia}
# Diffuse (Kd) and direct beam (Kb) extinction coefficients
Kd = 0.78;
Kb = 0.5;

# Longwave flux from ground and leaf
Lgrnd = emgrnd * sigma * tgrnd^4;
Lleaf = ϵ * sigma * tveg^4;

# Canopy integration: compare analytical solution with numerical integration
Lc = ϵ * (irsky + Lgrnd) * (1 - exp(-Kd * LAI)) - 2 * Lleaf * (1 - exp(- Kd * LAI));

f1(x) = (ϵ * Lgrnd - Lleaf) * Kd * exp(-Kd * (LAI - x)) + (ϵ * irsky - Lleaf) * Kd * exp(-Kd * x);
Lc_numerical = quadgk(f1, 0, LAI)[1]

@printf("Analytical model \n")
@printf("Lc = %15.5f\n",  Lc)
@printf("Lc = %15.5f\n",  Lc_numerical)
```

```{julia}
irveg = Lc;

# Sunlit canopy: compare analytical solution with numerical integration
Lcsun = (ϵ * irsky - Lleaf) * Kd / (Kd + Kb) * (1 - exp(-(Kd+Kb)*LAI)) + 
   (ϵ * Lgrnd - Lleaf) * Kd / (Kd - Kb) * (exp(-Kb*LAI) - exp(-Kd*LAI));

f1sun(x) = f1(x) .* exp(-Kb * x);
Lcsun_numerical = quadgk(f1sun, 0, LAI)[1]

@printf("Lcsun = %15.5f\n",Lcsun)
@printf("Lcsun = %15.5f\n",Lcsun_numerical)

# Shaded canopy: compare analytical solution with numerical integration
Lcsha = Lc - Lcsun;

f1sha(x) = f1(x) .* (1 - exp(-Kb * x));
Lcsha_numerical = quadgk(f1sha, 0, LAI)[1];

@printf("Lcsha = %15.5f\n",Lcsha)
@printf("Lcsha = %15.5f\n",Lcsha_numerical)

# Absorbed longwave radiation for ground (soil)
Ld = irsky * (1 - ϵ * (1 - exp(-Kd * LAI))) + ϵ * sigma * tveg^4 * (1 - exp(-Kd * LAI));
irsoi = Ld - Lgrnd;

# Canopy emitted longwave radiation
Lu = Lgrnd * (1 - ϵ * (1 - exp(-Kd * LAI))) + ϵ * sigma * tveg^4 * (1 - exp(-Kd * LAI));
irup = Lu;

# Conservation check: absorbed = incoming - outgoing
sumabs = irsky - irup;
err = sumabs - (irveg + irsoi);
if (abs(err) > 1e-03)
   @printf("err = %15.5f\n",err)
   @printf("sumabs = %15.5f\n",sumabs)
   @printf("irveg = %15.5f\n",irveg)
   @printf("irsoi = %15.5f\n",irsoi)
   error("Analytical solution: Longwave conservation error")
end

@printf(" \n")
@printf("irup = %15.5f\n",irup)
@printf("irveg = %15.5f\n",irveg)
@printf("irsoi = %15.5f\n",irsoi)
@printf(" \n")
```
